<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<schema name="minimal" version="1.1">
    <types>
        <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true"
                   positionIncrementGap="0"/>
        <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true"
                   positionIncrementGap="0"/>
        <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true"
                   positionIncrementGap="0"/>
        <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
        <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true"
                   positionIncrementGap="0"/>

        <!-- numeric field types that manipulate the value into
           a string value that isn't human readable in it's internal form,
           but sorts correctly and supports range queries.

             If sortMissingLast="true" then a sort on this field will cause documents
           without the field to come after documents with the field,
           regardless of the requested sort order.
             If sortMissingFirst="true" then a sort on this field will cause documents
           without the field to come before documents with the field,
           regardless of the requested sort order.
             If sortMissingLast="false" and sortMissingFirst="false" (the default),
           then default lucene sorting will be used which places docs without the field
           first in an ascending sort and last in a descending sort.
        -->
        <fieldtype name="sint" class="solr.SortableIntField" sortMissingLast="true"/>
        <fieldtype name="slong" class="solr.SortableLongField" sortMissingLast="true"/>
        <fieldtype name="sfloat" class="solr.SortableFloatField" sortMissingLast="true"/>
        <fieldtype name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true"/>

        <!-- bcd versions of sortable numeric type may provide smaller
             storage space and support very large numbers.
        -->
        <fieldtype name="bcdint" class="solr.BCDIntField" sortMissingLast="true"/>
        <fieldtype name="bcdlong" class="solr.BCDLongField" sortMissingLast="true"/>
        <fieldtype name="bcdstr" class="solr.BCDStrField" sortMissingLast="true"/>

        <fieldType name="string" class="solr.StrField"/>
        <!-- format for date is 1995-12-31T23:59:59.999Z and only the fractional
         seconds part (.999) is optional.
      -->
        <fieldtype name="date" class="solr.TrieDateField" precisionStep="0"/>
        <fieldtype name="tdate" class="solr.TrieDateField" precisionStep="6"/>
        <fieldtype name="pdate" class="solr.DateField" sortMissingLast="true"/>


        <!-- solr.TextField allows the specification of custom
             text analyzers specified as a tokenizer and a list
             of token filters.
          -->
        <fieldtype name="text" class="solr.TextField">
            <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.StandardFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory"/>
                <filter class="solr.PorterStemFilterFactory"/>
            </analyzer>
        </fieldtype>
        <fieldtype name="matchstring" class="solr.TextField">
            <analyzer>
                <tokenizer class="solr.StandardTokenizerFactory"/>
                <filter class="solr.StandardFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.StopFilterFactory"/>
                <filter class="solr.PorterStemFilterFactory"/>
            </analyzer>
            <similarity class="org.apache.lucene.analysis.tanimoto.OverlapSimilarity"/>
        </fieldtype>
        <fieldType name="uuid" class="solr.UUIDField"/>


    </types>
    <fields>
        <field name="id" type="int" indexed="true" stored="true" multiValued="false" required="false"/>
        <field name="title" type="text" indexed="true" stored="true"/>
        <field name="text" type="text" indexed="true" stored="true"/>
        <field name="matchstring" type="matchstring" indexed="true" stored="true"/>
        <field name="matchstringLength" type="int" indexed="true" stored="true" />

        <dynamicField name="*" type="text" indexed="true" stored="true"/>
    </fields>
    <defaultSearchField>text</defaultSearchField>
    <uniqueKey>id</uniqueKey>
    <similarity class="solr.SchemaSimilarityFactory"/>
</schema>